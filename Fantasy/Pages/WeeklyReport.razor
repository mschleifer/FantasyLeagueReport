@page "/"
@page "/weeklyreport/{seasonId:int}/{weekId:int}"
@inject FantasyApiService MyApiService
@inject IJSRuntime MyJSRuntime;
@*<h1>Weekly Report</h1>*@

@if (Teams == null)
{
    <p><em>Retrieving boxscores...</em></p>
}
else
{
    @*Check https://dribbble.com/shots/14517208-Clivlend-Team-Ticket-Distributor for design inspiration*@
    <div id="boxscores" class="px-2">
        @foreach (var boxscore in Teams.CreateBoxScores())
        {
            var Team1Win = boxscore.Team1.Score > boxscore.Team2.Score;
            <div class="m-4 p-2 flex flex-col bg-white rounded-lg shadow-md w-9/12 md:w-1/2 lg:w-1/4">
                <div class="flex items-center gap-3 p-4 @(Team1Win ? "border-l-4 border-fantasy-green" : "")">
                    <img src="@boxscore.Team1.Team.LogoURL" alt="team logo" class="w-14 h-14 rounded-lg" />
                    <div class="flex-grow">@boxscore.Team1.Team.Name</div>
                    <div class="font-bold">@boxscore.Team1.Score</div>
                </div>
                <div class="flex items-center gap-3 p-4 @(!Team1Win ? "border-l-4 border-fantasy-green" : "")">
                    <img src="@boxscore.Team2.Team.LogoURL" alt="team logo" class="w-14 h-14 rounded-lg" />
                    <div class="flex-grow">@boxscore.Team2.Team.Name</div>
                    <div class="font-bold">@boxscore.Team2.Score</div>
                </div>
            </div>
        }
    </div>

    <div class="flex flex-col px-4">
        <h2 class="font-semibold text-xl mb-2">Rankings</h2>
        <div class="md:mx-8">
            <TabSet>
                <Tab Title="Team Awards">
                    <div role="table" class="max-w-2xl" aria-label="Team awards" aria-rowcount="4">
                        <div role="rowgroup">
                            <div class="table-row" role="row">
                                <span role="columnheader" class="hidden">Icon</span>
                                <span role="columnheader" class="hidden">Category</span>
                                <span role="columnheader" class="hidden">Team(s)</span>
                                <span role="columnheader" class="hidden">Score</span>
                            </div>
                        </div>
                        <div role="rowgroup">
                            <div role="row" class="flex items-center bg-white rounded-lg my-4 shadow-md">
                                <div role="cell" class="flex-none py-6 px-4">👑</div>
                                <div role="cell" class="w-44 px-4">Highest Scorer</div>
                                <div role="cell" class="w-1/3 px-4">@string.Join(", ", HighScoreTeam.Select(x => x.Team.Name))</div>
                                <div role="cell" class="flex-grow text-right px-4">@HighScoreTeam.First().Score pts</div>
                            </div>
                            <div role="row" class="flex items-center bg-white rounded-lg my-4 shadow-md">
                                <span role="cell" class="flex-none py-6 px-4">🍀</span>
                                <span role="cell" class="w-44 px-4">Most Unlucky</span>
                                <span role="cell" class="w-1/3 px-4">@string.Join(", ", UnluckyTeam.Select(x => x.Team.Name))</span>
                                <span role="cell" class="flex-grow text-right px-4">@UnluckyTeam.First().Score to @Teams.FindById(UnluckyTeam.First().OpposingTeamId).Score</span>
                            </div>
                            <div role="row" class="flex items-center bg-white rounded-lg my-4 shadow-md">
                                <span role="cell" class="flex-none py-6 px-4">💪</span>
                                <span role="cell" class="w-44 px-4">Most Dominant Win</span>
                                <span role="cell" class="w-1/3 px-4">@string.Join(", ", DominantTeam.Select(x => x.Team.Name))</span>
                                <span role="cell" class="flex-grow text-right px-4">+@Teams.GetMarginalScoreForTeam(DominantTeam.First().Team.Id) pts</span>
                            </div>
                            <div role="row" class="flex items-center bg-white rounded-lg my-4 shadow-md">
                                <span role="cell" class="flex-none py-6 px-4">📏</span>
                                <span role="cell" class="w-44 px-4">Narrowest Loss</span>
                                <span role="cell" class="w-1/3 px-4">@string.Join(", ", NarrowLossTeam.Select(x => x.Team.Name))</span>
                                <span role="cell" class="flex-grow text-right px-4">@Teams.GetMarginalScoreForTeam(NarrowLossTeam.First().Team.Id) pts</span>
                            </div>
                        </div>
                    </div>
                </Tab>

                <Tab Title="Player Awards">
                    <div role="table" class="max-w-2xl" aria-label="Player awards" aria-rowcount="7">
                        <div role="rowgroup">
                            <div class="table-row" role="row">
                                <span role="columnheader" class="hidden">Icon</span>
                                <span role="columnheader" class="hidden">Position</span>
                                <span role="columnheader" class="hidden">Score</span>
                                <span role="columnheader" class="hidden">Player(s)</span>
                            </div>
                        </div>
                        <div role="rowgroup">
                            <div role="row" class="flex items-center bg-white rounded-lg my-4 shadow-md">
                                <div role="cell" class="flex-none py-6 px-4">🔥</div>
                                <div role="cell" class="w-20 px-4">QB</div>
                                <div role="cell" class="flex-grow px-4">@TopQB.First().BoxScore.TotalPoints pts</div>
                                <div role="cell" class="w-1/2 px-4">@string.Join(", ", TopQB.Select(x => $"{x.BoxScore.Player.FullName} ({x.FantasyTeam.Name})"))</div>
                            </div>
                            <div role="row" class="flex items-center bg-white rounded-lg my-4 shadow-md">
                                <div role="cell" class="flex-none py-6 px-4">🔥</div>
                                <div role="cell" class="w-20 px-4">RB</div>
                                <div role="cell" class="flex-grow px-4">@TopRB.First().BoxScore.TotalPoints pts</div>
                                <div role="cell" class="w-1/2 px-4">@string.Join(", ", TopRB.Select(x => $"{x.BoxScore.Player.FullName} ({x.FantasyTeam.Name})"))</div>
                            </div>
                            <div role="row" class="flex items-center bg-white rounded-lg my-4 shadow-md">
                                <div role="cell" class="flex-none py-6 px-4">🔥</div>
                                <div role="cell" class="w-20 px-4">WR</div>
                                <div role="cell" class="flex-grow px-4">@TopWR.First().BoxScore.TotalPoints pts</div>
                                <div role="cell" class="w-1/2 px-4">@string.Join(", ", TopWR.Select(x => $"{x.BoxScore.Player.FullName} ({x.FantasyTeam.Name})"))</div>
                            </div>
                            <div role="row" class="flex items-center bg-white rounded-lg my-4 shadow-md">
                                <div role="cell" class="flex-none py-6 px-4">🔥</div>
                                <div role="cell" class="w-20 px-4">TE</div>
                                <div role="cell" class="flex-grow px-4">@TopTE.First().BoxScore.TotalPoints pts</div>
                                <div role="cell" class="w-1/2 px-4">@string.Join(", ", TopTE.Select(x => $"{x.BoxScore.Player.FullName} ({x.FantasyTeam.Name})"))</div>
                            </div>
                            <div role="row" class="flex items-center bg-white rounded-lg my-4 shadow-md">
                                <div role="cell" class="flex-none py-6 px-4">🔥</div>
                                <div role="cell" class="w-20 px-4">DST</div>
                                <div role="cell" class="flex-grow px-4">@TopDST.First().BoxScore.TotalPoints pts</div>
                                <div role="cell" class="w-1/2 px-4">@string.Join(", ", TopDST.Select(x => $"{x.BoxScore.Player.FullName} ({x.FantasyTeam.Name})"))</div>
                            </div>
                            <div role="row" class="flex items-center bg-white rounded-lg my-4 shadow-md">
                                <div role="cell" class="flex-none py-6 px-4">🤔</div>
                                <div role="cell" class="w-20 px-4">K</div>
                                <div role="cell" class="flex-grow px-4">@TopK.First().BoxScore.TotalPoints pts</div>
                                <div role="cell" class="w-1/2 px-4">@string.Join(", ", TopK.Select(x => $"{x.BoxScore.Player.FullName} ({x.FantasyTeam.Name})"))</div>
                            </div>
                            <div role="row" class="flex items-center bg-white rounded-lg my-4 shadow-md">
                                <div role="cell" class="flex-none py-6 px-4">💺</div>
                                <div role="cell" class="w-20 px-4">Bench</div>
                                <div role="cell" class="flex-grow px-4">@TopBench.First().BoxScore.TotalPoints pts</div>
                                <div role="cell" class="w-1/2 px-4">@string.Join(", ", TopBench.Select(x => $"{x.BoxScore.Player.FullName} ({x.FantasyTeam.Name})"))</div>
                            </div>
                        </div>
                    </div>
                </Tab>

                <Tab Title="Gooses">
                    <div role="table" class="max-w-2xl" aria-label="Goose Players" aria-rowcount="@GoosePlayers.Count()">
                        <div role="rowgroup">
                            <div class="table-row" role="row">
                                <span role="columnheader" class="hidden">Icon</span>
                                <span role="columnheader" class="hidden">Position</span>
                                <span role="columnheader" class="hidden">Player Name</span>
                                <span role="columnheader" class="hidden">Team</span>
                            </div>
                        </div>
                        <div role="rowgroup">
                            @foreach (var player in GoosePlayers)
                            {
                                <div role="row" class="flex items-center bg-white rounded-lg my-4 shadow-md">
                                    <div role="cell" class="flex-none py-6 px-4">🦢</div>
                                    <div role="cell" class="w-20 px-4">@player.BoxScore.Position</div>
                                    <div role="cell" class="flex-grow px-4">@player.BoxScore.Player.FullName</div>
                                    <div role="cell" class="w-1/2 px-4">@player.FantasyTeam.Name</div>
                                </div>
                            }
                        </div>
                    </div>
                </Tab>
            </TabSet>
        </div>
    </div>
}


@code {
    [Parameter]
    public int? SeasonId { get; set; }
    [Parameter]
    public int? WeekId { get; set; }

    private IEnumerable<TeamForWeek> Teams;
    private IEnumerable<TeamForWeek> HighScoreTeam;
    private IEnumerable<TeamForWeek> UnluckyTeam;
    private IEnumerable<TeamForWeek> DominantTeam;
    private IEnumerable<TeamForWeek> NarrowLossTeam;
    private IEnumerable<PlayerForWeek> TopQB;
    private IEnumerable<PlayerForWeek> TopRB;
    private IEnumerable<PlayerForWeek> TopWR;
    private IEnumerable<PlayerForWeek> TopTE;
    private IEnumerable<PlayerForWeek> TopDST;
    private IEnumerable<PlayerForWeek> TopK;
    private IEnumerable<PlayerForWeek> TopBench;
    private IEnumerable<PlayerForWeek> GoosePlayers;

    public override async Task SetParametersAsync(ParameterView parameters)
    {
        await base.SetParametersAsync(parameters);

        SeasonId = SeasonId ?? 2020;
        WeekId = WeekId ?? 10;
    }

    protected override async Task OnInitializedAsync()
    {
        Task<List<TeamForWeek>> taskA = MyApiService.GetAllTeamsForWeek(SeasonId.Value, WeekId.Value);
        await taskA.ContinueWith(x =>
        {
            Teams = x.Result;
        });

        HighScoreTeam = Teams.GetHighestScoring();
        UnluckyTeam = Teams.GetUnluckiestLoss();
        DominantTeam = Teams.GetDominantVictory();
        NarrowLossTeam = Teams.GetNarrowestLoss();
        TopQB = Teams.GetTopScoringQB();
        TopRB = Teams.GetTopScoringRB();
        TopWR = Teams.GetTopScoringWR();
        TopTE = Teams.GetTopScoringTE();
        TopDST = Teams.GetTopScoringDST();
        TopK = Teams.GetTopScoringK();
        TopBench = Teams.GetTopScoringBenchPlayer();
        GoosePlayers = Teams.GetZeroPointStarters();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        // This will run both before our API call completes and after, we need to make sure to only apply Flickity after
        // NOTE: per MSDN JS libraries that modify the DOM are unsafe when they interact with DOM elements provided by
        // Blazor - we probably shouldn't do this if the Teams is ever expected to change after the 1st API call
        if (Teams != null)
        {
            await MyJSRuntime.InvokeVoidAsync("flickity.init", "boxscores");
        }
    }
}