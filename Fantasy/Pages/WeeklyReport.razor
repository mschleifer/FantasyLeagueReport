@page "/"
@page "/weeklyreport/{seasonId:int}/{weekId:int}"
@inject FantasyApiService MyApiService
@inject IJSRuntime MyJSRuntime;

<div class="flex justify-center">
    <h1 class="md:w-1/2 text-2xl font-semibold text-center bg-white rounded-lg shadow-md p-4 m-4 dark:bg-white-opacity-12">
        @if(WeekId.HasValue)
        {
          <span>The @SeasonId Week @WeekId Report</span>
        }
        else
        {
            <span>The @SeasonId Weekly Report</span>
        }
    </h1>
</div>

@if (Teams == null)
{
    <div class="loading-bar__message">Fetching box scores...</div>
    <div class="loading-bar"></div>
}
else
{
    @*Check https://dribbble.com/shots/14517208-Clivlend-Team-Ticket-Distributor for design inspiration*@
    <div id="boxscores" class="px-2">
        @foreach (var boxscore in Teams.CreateBoxScores())
        {
            var Team1Win = boxscore.Team1.Score >= boxscore.Team2.Score;
            var Team2Win = boxscore.Team1.Score <= boxscore.Team2.Score;
            <div class="m-4 p-2 flex flex-col bg-white rounded-lg shadow-md w-9/12 md:w-1/2 lg:w-1/4 dark:bg-white-opacity-12">
                <div class="flex items-center gap-3 p-4 @(Team1Win ? "border-l-4 border-fantasy-green" : "")">
                    <TeamLogo LogoUrl=@boxscore.Team1.Team.LogoURL Alt=@boxscore.Team1.Team.Name Size=14></TeamLogo>
                    <div class="flex-grow">@boxscore.Team1.Team.Name</div>
                    <div class="font-bold">@boxscore.Team1.Score</div>
                </div>
                <div class="flex items-center gap-3 p-4 @(Team2Win ? "border-l-4 border-fantasy-green" : "")">
                    <TeamLogo LogoUrl=@boxscore.Team2.Team.LogoURL Alt=@boxscore.Team2.Team.Name Size=14></TeamLogo>
                    <div class="flex-grow">@boxscore.Team2.Team.Name</div>
                    <div class="font-bold">@boxscore.Team2.Score</div>
                </div>
            </div>
        }
    </div>

    <div class="flex justify-center">
        <div class="bg-white rounded-lg shadow-md p-4 mx-2 my-4 flex-grow max-w-screen-md dark:bg-white-opacity-12">
            <h2 class="font-semibold text-xl m-4">
                Awards
            </h2>
            <div class="md:mx-8">
                <TabSet>
                    <Tab Title="Team Awards">
                        <div role="table" class="max-w-2xl" aria-label="Team awards" aria-rowcount="4">
                            <div role="rowgroup">
                                <div class="table-row" role="row">
                                    <span role="columnheader" class="hidden">Icon</span>
                                    <span role="columnheader" class="hidden">Category</span>
                                    <span role="columnheader" class="hidden">Team(s)</span>
                                    <span role="columnheader" class="hidden">Score</span>
                                </div>
                            </div>
                            <div role="rowgroup">
                                <TeamAwardTableRow Icon="👑"
                                                    Category="Highest Scorer"
                                                    Score=@HighScoreTeam.First().Score
                                                    Teams=@HighScoreTeam></TeamAwardTableRow>
                                <TeamAwardTableRow Icon="🍀"
                                                    Category="Most Unlucky"
                                                    Score=@UnluckyTeam.First().Score
                                                    Teams=@UnluckyTeam></TeamAwardTableRow>
                                <TeamAwardTableRow Icon="💪"
                                                    Category="Most Dominant Win"
                                                    Score=@Teams.GetMarginalScoreForTeam(DominantTeam.First().Team.Id)
                                                    Teams=@DominantTeam></TeamAwardTableRow>
                                <TeamAwardTableRow Icon="📏"
                                                    Category="Narrowest Loss"
                                                    Score=@Teams.GetMarginalScoreForTeam(NarrowLossTeam.First().Team.Id)
                                                    Teams=@NarrowLossTeam></TeamAwardTableRow>
                            </div>
                        </div>
                    </Tab>

                    <Tab Title="Player Awards">
                        <div role="table" class="max-w-2xl" aria-label="Player awards" aria-rowcount="7">
                            <div role="rowgroup">
                                <div class="table-row" role="row">
                                    <span role="columnheader" class="hidden">Icon</span>
                                    <span role="columnheader" class="hidden">Position</span>
                                    <span role="columnheader" class="hidden">Score</span>
                                    <span role="columnheader" class="hidden">Player(s)</span>
                                </div>
                            </div>
                            <div role="rowgroup">
                                <PlayerAwardTableRow Icon="🔥" 
                                                        Position="QB" 
                                                        Score=@(TopQB.First().BoxScore.TotalPoints) 
                                                        Players=@TopQB></PlayerAwardTableRow>
                                <PlayerAwardTableRow Icon="🔥" 
                                                        Position="RB" 
                                                        Score=@(TopRB.First().BoxScore.TotalPoints) 
                                                        Players=@TopRB></PlayerAwardTableRow>
                                <PlayerAwardTableRow Icon="🔥" 
                                                        Position="WR" 
                                                        Score=@(TopWR.First().BoxScore.TotalPoints) 
                                                        Players=@TopWR></PlayerAwardTableRow>
                                <PlayerAwardTableRow Icon="🔥" 
                                                        Position="TE" 
                                                        Score=@(TopTE.First().BoxScore.TotalPoints) 
                                                        Players=@TopTE></PlayerAwardTableRow>
                                <PlayerAwardTableRow Icon="🔥" 
                                                        Position="DST" 
                                                        Score=@(TopDST.First().BoxScore.TotalPoints) 
                                                        Players=@TopDST></PlayerAwardTableRow>
                                <PlayerAwardTableRow Icon="🤔" 
                                                        Position="K" 
                                                        Score=@(TopK.First().BoxScore.TotalPoints) 
                                                        Players=@TopK></PlayerAwardTableRow>
                                <PlayerAwardTableRow Icon="💺" 
                                                        Position="BENCH" 
                                                        Score=@(TopBench.First().BoxScore.TotalPoints) 
                                                        Players=@TopBench></PlayerAwardTableRow>
                            </div>
                        </div>
                    </Tab>

                    <Tab Title="@("\"Gooses\"")">
                        <div role="table" class="max-w-2xl" aria-label="Goose Players" aria-rowcount="@GoosePlayers.Count()">
                            <div role="rowgroup">
                                <div class="table-row" role="row">
                                    <span role="columnheader" class="hidden">Icon</span>
                                    <span role="columnheader" class="hidden">Position</span>
                                    <span role="columnheader" class="hidden">Player Name</span>
                                    <span role="columnheader" class="hidden">Team</span>
                                    <span role="columnheader" class="hidden">Points</span>
                                </div>
                            </div>
                            <div role="rowgroup">
                            @foreach (var player in GoosePlayers)
                            {
                                <div role="row" class="flex items-center border-t-2 border-gray-200">
                                    <div role="cell" class="flex-none py-6 px-2 sm:px-4">🦢</div>
                                    <div role="cell" class="w-20 px-2 sm:px-4">@player.BoxScore.Position</div>
                                    <div role="cell" class="w-1/3 px-2 sm:px-4">@player.BoxScore.Player.FullName</div>
                                    <div role="cell" class="w-1/3 px-2 sm:px-4">@player.FantasyTeam.Name</div>
                                    <div role="cell" class="flex-grow text-right px-2 sm:px-4">@player.BoxScore.TotalPoints pts</div>
                                </div>
                            }
                            </div>
                        </div>
                    </Tab>
                </TabSet>
            </div>
        </div>
    </div>
    
    <div class="flex justify-center">
        <div class="bg-white rounded-lg shadow-md p-4 mx-2 my-4 flex-grow max-w-screen-md dark:bg-white-opacity-12">
            <h2 class="font-semibold text-xl mx-2 mb-4">
                Week @WeekId Standings
            </h2>
            <div class="md:mx-8">
                <table role="table" class="max-w-2xl" aria-label="Goose Players" aria-rowcount="@GoosePlayers.Count()">
                    <thead role="rowgroup">
                        <tr class="" role="row">
                            <th role="columnheader" class=" py-6 px-2 sm:px-4">Team</th>
                            <th role="columnheader" class=" py-6 px-2 sm:px-4">Playoff Seed</th>
                            <th role="columnheader" class=" py-6 px-2 sm:px-4">Record</th>
                            <th role="columnheader" class=" py-6 px-2 sm:px-4">Total Points</th>
                        </tr>
                    </thead>
                    <tbody role="rowgroup">
                    @foreach (var team in Teams.OrderBy(x => x.Team.PlayoffSeed))
                    {
                        <tr role="row" class="border-t-2 border-gray-200">
                            <td role="cell" class="flex py-6 px-2 sm:px-4">
                                <TeamLogo LogoUrl=@team.Team.LogoURL Alt=@team.Team.Name Size=6 Class="mr-2"></TeamLogo>
                                @team.Team.Name
                            </td>
                            <td role="cell" class="py-6 px-2 sm:px-4">@team.Team.PlayoffSeed</td>
                            <td role="cell" class="py-6 px-2 sm:px-4">@team.Team.Wins-@team.Team.Losses-@team.Team.Ties</td>
                            <td role="cell" class="py-6 px-2 sm:px-4">@team.Team.TotalPointsScored</td>
                        </tr>
                    }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

}


@code {
    [Parameter]
    public int? SeasonId { get; set; }
    [Parameter]
    public int? WeekId { get; set; }

    private IEnumerable<TeamForWeek> Teams;
    private IEnumerable<TeamForWeek> HighScoreTeam;
    private IEnumerable<TeamForWeek> UnluckyTeam;
    private IEnumerable<TeamForWeek> DominantTeam;
    private IEnumerable<TeamForWeek> NarrowLossTeam;
    private IEnumerable<PlayerForWeek> TopQB;
    private IEnumerable<PlayerForWeek> TopRB;
    private IEnumerable<PlayerForWeek> TopWR;
    private IEnumerable<PlayerForWeek> TopTE;
    private IEnumerable<PlayerForWeek> TopDST;
    private IEnumerable<PlayerForWeek> TopK;
    private IEnumerable<PlayerForWeek> TopBench;
    private IEnumerable<PlayerForWeek> GoosePlayers;

    public override async Task SetParametersAsync(ParameterView parameters)
    {
        await base.SetParametersAsync(parameters);

        SeasonId = SeasonId ?? Utilities.Helpers.GetCurrentSeason();
        WeekId = WeekId ?? await MyApiService.GetCurrentWeek() - 1;

        Teams = await MyApiService.GetAllTeamsForWeek(SeasonId.Value, WeekId.Value);

        HighScoreTeam = Teams.GetHighestScoring();
        UnluckyTeam = Teams.GetUnluckiestLoss();
        DominantTeam = Teams.GetDominantVictory();
        NarrowLossTeam = Teams.GetNarrowestLoss();
        TopQB = Teams.GetTopScoringQB();
        TopRB = Teams.GetTopScoringRB();
        TopWR = Teams.GetTopScoringWR();
        TopTE = Teams.GetTopScoringTE();
        TopDST = Teams.GetTopScoringDST();
        TopK = Teams.GetTopScoringK();
        TopBench = Teams.GetTopScoringBenchPlayer();
        GoosePlayers = Teams.GetZeroPointStarters();

        StateHasChanged();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        // This will run both before our API call completes and after, we need to make sure to only apply Flickity after
        // NOTE: per MSDN JS libraries that modify the DOM are unsafe when they interact with DOM elements provided by
        // Blazor - we probably shouldn't do this if the Teams is ever expected to change after the 1st API call
        if (Teams != null)
        {
            await MyJSRuntime.InvokeVoidAsync("flickity.init", "boxscores");
        }
    }
}